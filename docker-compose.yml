version: '3.8'

services:
  # -----------------------
  # PostgreSQL Database Service for User Management
  # -----------------------
  postgresql-user:
    image: postgres:15.6-alpine
    container_name: academix-user-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: academix_users_db
      POSTGRES_USER: academix_user
      POSTGRES_PASSWORD: academix_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg_data_user:/var/lib/postgresql/data
    networks:
      - academix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U academix_user -d academix_users_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # -----------------------
  # PostgreSQL Database Service for Course Management
  # -----------------------
  postgresql-course:
    image: postgres:15.6-alpine
    container_name: academix-course-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: academix_courses_db
      POSTGRES_USER: academix_user
      POSTGRES_PASSWORD: academix_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg_data_course:/var/lib/postgresql/data
    networks:
      - academix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U academix_user -d academix_courses_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # -----------------------
  # Eureka Discovery Server
  # -----------------------
  discovery-server:
    build:
      context: .
      dockerfile: services/discovery-server/Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      EUREKA_CLIENT_REGISTER-WITH-EUREKA: "false"
      EUREKA_CLIENT_FETCH-REGISTRY: "false"
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: INFO
      LOGGING_LEVEL_COM_ACADEMIX: DEBUG
    networks:
      - academix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # -----------------------
  # User Management Service
  # -----------------------
  user-management-service:
    build:
      context: .
      dockerfile: services/user-management-service/Dockerfile
    container_name: user-management-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-user:5432/academix_users_db
      SPRING_DATASOURCE_USERNAME: academix_user
      SPRING_DATASOURCE_PASSWORD: academix_password
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG
      LOGGING_LEVEL_COM_ACADEMIX: DEBUG
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: user-management-service
    depends_on:
      postgresql-user:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - academix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  # -------------------------
  # Course Management Service
  # -------------------------
  course-management-service:
    build:
      context: .
      dockerfile: services/course-management-service/Dockerfile
    container_name: course-management-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-course:5432/academix_courses_db
      SPRING_DATASOURCE_USERNAME: academix_user
      SPRING_DATASOURCE_PASSWORD: academix_password
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG
      LOGGING_LEVEL_COM_ACADEMIX: DEBUG
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: course-management-service
    depends_on:
      postgresql-course:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - academix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 45s

  # -----------------------
  # API Gateway Service
  # -----------------------
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG
      LOGGING_LEVEL_COM_ACADEMIX: DEBUG
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka # Passing Eureka URL
      EUREKA_INSTANCE_HOSTNAME: api-gateway
    depends_on:
      discovery-server:
        condition: service_healthy
      user-management-service:
        condition: service_healthy
      course-management-service:
        condition: service_healthy
    networks:
      - academix-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

# Define custom networks for inter-service communication.
networks:
  academix-network:
    driver: bridge

# Define named volumes for data persistence.
volumes:
  pg_data_user:
  pg_data_course:
